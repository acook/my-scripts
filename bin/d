#!/usr/bin/env ruby

class DieRoller
  def self.repl
    require 'readline'

    command = true
    while command do
      command = Readline.readline '> ', true
      if command == 'exit' then
        command = false
      elsif command == '' then
        DieRoller.new(1,20).roll
      else
        DieRoller.parse command
      end
    end

    puts 'goodbye!'
  end

  def self.parse command
    commands = command.split /\s/

    commands.each do |command|
      if command.include? 'd' then
        count, sides = command.split('d').map(&:to_i)
      else
        sides = command.to_i
      end

      if count.nil? || count == 0 then
        count = 1
      end

      new(count, sides).roll
    end
  end

  def initialize count, sides
    @count, @sides = count, sides
  end
  attr_accessor :count, :sides

  def roll
    puts "(#{sides} sides @ #{count} count)"
    total = 0

    if count > 1 then
      puts "  roll  |  result"
      puts "  ---------------"
    end

    count.times do |n|
      result = rand sides
      total += result
      if count > 1 then
        puts "  #{(n + 1).to_s.rjust 4}  : #{result.to_s.rjust 4}"
      else
        puts "  #{result}"
      end
    end

    puts "  total = #{total.to_s.rjust 4}" if count > 1
  end
end

if ARGV.empty? then
  DieRoller.repl
else
  DieRoller.parse ARGV.join ' '
end
