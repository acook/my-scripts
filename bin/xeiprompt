function __xeiprompt {
LAST_COMMAND_EXIT_STATUS=$?

SYM_LSEP=$'\ue0b0'
SYM_LSEP_ALT=$'\ue0b1'
SYM_RSEP=$'\ue0b2'
SYM_RSEP_ALT=$'\ue0b3'

SYM_BULLET=•
SYM_CIRCLE=⦿
SYM_EMPTY=∅

GIT_SYM_SEP=" $SYM_LSEP_ALT "
GIT_SYM_ADD=✚
GIT_SYM_MOD=Δ
GIT_SYM_DEL=†
GIT_SYM_BRANCH=

STATUS_SYM_SUCCESS=✔
STATUS_SYM_FAILURE=✖

CWD_ELLIPSIS=…

TIME_SYM_CLOCK=☉

if [ -n "$ZSH_VERSION" ]; then
  setopt interactivecomments
  cwd_read_array='-A'
else
  cwd_read_array='-a'
fi

# for git_string
git_root="$(git rev-parse --git-dir 2> /dev/null)"
if [ $? -eq 0 ]; then
  git diff-index --quiet HEAD --
  git_any=$?

  # for git_summary (status summary)
  # todo: only display segments with counts greater than 0
  # todo: add other states - untracked, missing
  if (( $git_any != 0 )); then
    git_status="$(git diff-index --name-status HEAD --)"

    git_added="$(\grep -c "^A" <<< $git_status)"
    git_modified="$(\grep -c "^M" <<< $git_status)"
    git_deleted="$(\grep -c "^D" <<< $git_status)"

    git_summary=" $GIT_SYM_ADD$git_added$GIT_SYM_SEP$GIT_SYM_MOD$git_modified$GIT_SYM_SEP$GIT_SYM_DEL$git_deleted"
  else
    #git_summary="$SYM_LSEP_ALT $SYM_EMPTY"
    git_summary=""
  fi

  # for git_branch (branch name)
  # todo: display "merge" in the middle of a merge instead of the branch
  git_branch="$(git symbolic-ref -q --short HEAD -- || git rev-parse --short HEAD --)"

  # finalized git string
  git_string=" $GIT_SYM_BRANCH $git_branch$git_summary"
else
  git_string=""
fi

# for status_string
if [ "$LAST_COMMAND_EXIT_STATUS" = "0" ]; then
  status_string=" $STATUS_SYM_SUCCESS"
else
  status_string=" $STATUS_SYM_FAILURE $LAST_COMMAND_EXIT_STATUS"
fi

# for cwd_pretty
if [[ "$PWD" == "$HOME"* ]]; then
  cwd_prefix='~'
  cwd_path="${PWD#$HOME}"
else
  cwd_prefix=''
  cwd_path=$PWD
fi

if [ "${#cwd_path}" -gt "$(($COLUMNS / 3))" ]; then

  IFS='/' read -r $cwd_read_array cwd_array <<< "$cwd_path"
  cwd_significant="$cwd_array[-2]/$cwd_array[-1]"
  cwd_accumulator=""
  for i in "${cwd_array[@]: 0:-2}"; do
    if [ "${#i}" -gt "3" ]; then
      cwd_accumulator="$cwd_accumulator/${i:0:2}$CWD_ELLIPSIS"
    elif [ "${#i}" -eq "0" ]; then
      # the first element is usually empty, so ignore it
      # since arrays in zsh are 1-index and bash being 0-index
      # this ensures compatibility
      false
    else
      cwd_accumulator="$cwd_accumulator/$i"
    fi
  done

  cwd_string="$cwd_prefix$cwd_accumulator/$cwd_significant"
else
  cwd_string="$cwd_prefix$cwd_path"
fi

# for time_string
time_string=" $TIME_SYM_CLOCK $(date "+%m.%d $SYM_RSEP_ALT %H:%M")"

# SEGMENTS
# cwd_string
# time_string
# git_string
# status_string

#~/Projects & master [4M:2A:1D]                         X 255 0 4.20|5:30
#$ _

if [ -n "$ZSH_VERSION" ]; then
  ansi_up=$'%{\e[1A%}'
  ansi_down=$'%{\e[1B %}'
  newline=$'\n'

  bkg_grey=$'%{\e[48;5;234m%}'
  fg_grey=$'%{\e[38;5;234m%}'
  bkg_lime=$'%{\e[48;5;154m%}'
  fg_lime=$'%{\e[38;5;154m%}'
  bkg_berry=$'%{\e[48;5;26m%}'
  fg_berry=$'%{\e[38;5;26m%}'
  reset=$'%{\e[0m%}'

  psep=$' $bkg_grey$fg_lime$SYM_LSEP$fg_berry'
  gsep=$' $reset$fg_grey$SYM_LSEP$fg_berry'
  tsep=$' $SYM_RSEP$bkg_grey$fg_lime'
  ssep=$' $reset$fg_berry$SYM_RSEP$bkg_berry$fg_grey'

  export PROMPT="$bkg_lime$fg_grey$cwd_string$psep$git_string$gsep$newline\$ $reset"
  export RPROMPT="$ansi_up$ssep$status_string$tsep$time_string$reset$ansi_down"
else
  newline=$'\n'

  bkg_grey=$'\e[48;5;234m'
  fg_grey=$'\e[38;5;234m'
  bkg_lime=$'\e[48;5;154m'
  fg_lime=$'\e[38;5;154m'
  bkg_berry=$'\e[48;5;26m'
  fg_berry=$'\e[38;5;26m'
  reset=$'\e[0m'

  psep=' \[$bkg_grey$fg_lime\]$SYM_LSEP\[$fg_berry\]'
  gsep=' \[$reset$fg_grey\]$SYM_LSEP\[$fg_berry\]'
  tsep=' $SYM_RSEP\[$bkg_grey$fg_lime\]'
  ssep=' \[$reset$fg_berry\]$SYM_RSEP\[$bkg_berry$fg_grey\]'

  export PS1="\[$bkg_lime$fg_grey\]$cwd_string$psep$git_string$gsep$ssep$status_string$tsep$time_string \[$reset$fg_grey\]$SYM_LSEP$newline\[$fg_berry\]\$ \[$reset\]"
fi
}

if [ -n "$ZSH_VERSION" ]; then
  if [[ ! ${precmd_functions[(r)__xeiprompt]} == __xeiprompt ]]; then
    precmd_functions+=(__xeiprompt)
  fi
else
  if [[ ! "$PROMPT_COMMAND" == *__xeiprompt* ]]; then
    PROMPT_COMMAND='__xeiprompt;'$'\n'"$PROMPT_COMMAND"
  fi
fi

