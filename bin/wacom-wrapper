#!/usr/bin/env bash

source "$(dirname "${BASH_SOURCE[0]}")/../external/modern.sh/modern.sh" quiet

wacom_device="${1:-""}"
wacom_field="${2:-""}"
wacom_value="${3:-""}"

export wacom_device
export wacom_field
export wacom_value

# ensure command is available
if ! command_exists xsetwacom; then
  die_status 1 "unable to find the \`xetwacom\' command! install xorg-driver-input-wacom!"
fi

# ensure device is connected
wacom_all_devices="$(xsetwacom --list devices)"
export wacom_all_devices
if \grep '^'"$wacom_device"'$' <<< "$wacom_all_devices"; then
  die_status 2 "device \"$wacom_device\" not found"
fi

# get the value of the field
xsetwacom --get "$wacom_device" "$wacom_field" > /dev/null || die_status 3 "unknown field: #{$wacom_field}"
wacom_previous_value="$(xsetwacom --get "$wacom_device" "$wacom_field" || echo "null")"

if [[ -z "$wacom_value" ]]; then
  say "value of '$wacom_field' for '$wacom_device' is '$wacom_previous_value'"
else
  # change the value of the field
  xsetwacom --set "$wacom_device" "$wacom_field" "$wacom_value"  || echo "unknown error occured!"
  wacom_current_value="$(xsetwacom --get "$wacom_device" "$wacom_field"  || echo "null")"
  export wacom_current_value
  if [[ $wacom_current_value == $wacom_previous_value ]]; then
    say "device '$wacom_device' setting for '$wacom_field' $(colorfg green)unchanged$(colorreset) from '$wacom_previous_value' to '$wacom_current_value'"
  else
    say "device '$wacom_device' setting for '$wacom_field' $(colorfg yellow)changed$(colorreset) from '$wacom_previous_value' to '$wacom_current_value'"
  fi
fi
