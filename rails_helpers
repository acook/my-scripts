#!/bin/bash
# Rails helpers, load with `source rails_helpers`
# TODO: Add a check to see if we're running on a production server

if [ $# -gt 0 ]; then
  echo 'rails_helpers: rails CLI helpers by Anthony M. Cook 2010'
  echo "cat $(which $0) for more info."
  echo ''
  echo 'aliases:'
  grep '^alias' $(which $0)
  echo ''
  echo 'functions:'
  grep '^function' $(which $0)
  exit
fi

# Run all tests
alias all_tests='unit_tests; func_tests; feat_tests'
# All tests, making sure the DB is prepared
alias allx_tests='empty_db; unit_tests; func_tests; rake db:seed & feat_tests'

# Shortcuts for each basic test type
alias unit_tests='rake test:units'
alias func_tests='rake test:functionals'
alias feat_tests='rake features'

# Run an individual unit test file
function unit_test { ruby -I lib:test test/unit/$1_test.rb; }
# Run an individual functional test file
function func_test { ruby -I lib:test test/functional/$1_controller_test.rb; }
# Run an individual feature test file
function feat_test { rake features FEATURE=features/"$1".feature; }
# Run a specific line number/scenario from a feature test file
function scen_test { cucumber features/"$1".feature:"$2"; }

# Pull in RVM's bash script that does stuff 
if [[ -s ~/.rvm/scripts/rvm ]] ; then source ~/.rvm/scripts/rvm ; fi

# Database shortcuts
alias empty_db='rake db:drop; rake db:create; rake db:migrate'
alias reset_db='empty_db; rake db:seed'
alias test_db='empty_db; rake db:test:clone; rake db:seed &'

# Loads the test fixtures into the test database and launches the rails test console
function test_console { 
  rake db:fixtures:load RAILS_ENV=test > ~/.nil;
  rails c test;
  rm -rf ~/.nil;
}

# Clear the logs, makes grepping easier.
function clear_logs {
  echo > log/development.log
  echo > log/test.log
}
